description = 'Jserver-AndroidLibrary-Rollup'
apply from: "$rootDir/common.gradle"
useandroidpluginconfig(project)
dependencies {
    implementation project(':nanohttpd')
    //Whole long story why applications are consumers and they are down stream and what I say here is upstream
    //The short story is don't add upstream anything to downstream through you.
    //The super short story is, always use implementation when adding your dependencies
    //implementation project(':nanohttpd-webserver')
    //implementation project(':nanohttpd-websocket')
    testImplementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.4.1'
    testImplementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.2.5'
}
android {
    /*lintOptions {
        abortOnError false
    }*/
    packagingOptions {
        exclude ':nanohttpd'
        exclude ':nanohttpd-nanolets'
        exclude ':nanohttpd-webserver'
        exclude ':nanohttpd-websocket'
        exclude ':nanohttpd-samples'
        exclude ':nanohttpd-webserver-markdown-plugin'
        exclude ':jcifs-fileserver'
        exclude ':nanohttpd-apache-fileupload'
    }

    compileSdkVersion 33
    defaultConfig {
        //applicationId "org.nanohttpd.webserver"
        minSdkVersion 28
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        namespace "org.nanohttpd"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
        //coreLibraryDesugaringEnabled false
    }

    /*tasks.withType(JavaCompile).configureEach {
        options.compilerArgs += "-Xlint:deprecation"
    }*/

    sourceSets {
        main {
            java.srcDirs = [] // Clear default srcDirs
            //java.srcDir(fileTree(dir: "${rootProject.projectDir}/core/src/main", include: '**/*.java'))
            //java.srcDir(fileTree(dir: "${rootProject.projectDir}/webserver/src/main/java", include: '**/*.java'))
            java.srcDir(file("${rootProject.projectDir}/core/src/main"))
            java.srcDir(file("${rootProject.projectDir}/websocket/src/main"))
            java.srcDir(file("${rootProject.projectDir}/webserver/src/main"))
            //java.srcDir(file("${rootProject.projectDir}/webserver/src/test"))
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // Build outputs
    /*publishing {
        publications {
            aar(MavenPublication) {
                from components.release
            }
        }
    }*/
}

/*tasks.named('build').configure {
    dependsOn ':nanohttpd-webserver:build'
}*/


